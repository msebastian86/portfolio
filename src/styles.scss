/* You can add global styles to this file, and also import other style files */
@import 'assets/styles/bootstrap/bootstrap.scss';
@import '../node_modules/ionicons/css/ionicons.css';
@import 'assets/styles/my-variables';

@font-face {
    font-family: 'ProximaNova';
    src:
        url('assets/fonts/ProximaNova-Light.eot?#iefix') format('embedded-opentype'),
        url('assets/fonts/ProximaNova-Light.otf')  format('opentype'),
        url('assets/fonts/ProximaNova-Light.woff') format('woff'),
        url('assets/fonts/ProximaNova-Light.ttf')  format('truetype'),
        url('assets/fonts/ProximaNova-Light.svg#ProximaNova-Light') format('svg');
    font-weight: 300;
    font-style: normal;
}

@font-face {
    font-family: 'ProximaNova';
    src:
        url('assets/fonts/ProximaNova-Bold.eot?#iefix') format('embedded-opentype'),
        url('assets/fonts/ProximaNova-Bold.otf')  format('opentype'),
        url('assets/fonts/ProximaNova-Bold.woff') format('woff'),
        url('assets/fonts/ProximaNova-Bold.ttf')  format('truetype'),
        url('assets/fonts/ProximaNova-Bold.svg#ProximaNova-Bold') format('svg');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'ProximaNova';
    src:
        url('assets/fonts/ProximaNova-Regular.eot?#iefix') format('embedded-opentype'),
        url('assets/fonts/ProximaNova-Regular.otf')  format('opentype'),
        url('assets/fonts/ProximaNova-Regular.woff') format('woff'),
        url('assets/fonts/ProximaNova-Regular.ttf')  format('truetype'),
        url('assets/fonts/ProximaNova-Regular.svg#ProximaNova-Regular') format('svg');
    font-weight: normal;
    font-style: normal;
}

body {
    background: $black;
    color: $white;

    * {
        font-family: 'ProximaNova', 'Helvetica Neue', Helvetica, sans-serif;
    }
}

@include media-breakpoint-up(xs) {
    h1 { font-size: 1rem * 2.1; }
    h2 { font-size: 1rem * 2; }
    h3 { font-size: 1rem * 1.75; }
    h4 { font-size: 1rem * 1.45; }
    h5 { font-size: 1rem * 1.35; }
    h6 { font-size: 1rem * 1.3; }
}

@include media-breakpoint-up(md) {
    h1 { font-size: 1rem * 3; }
    h2 { font-size: 1rem * 2.5; }
    h3 { font-size: 1rem * 2.2; }
    h4 { font-size: 1rem * 1.9; }
    h5 { font-size: 1rem * 1.7; }
    h6 { font-size: 1rem * 1.45; }

    body {
        font-size: 1.1rem;
    }
}

@include media-breakpoint-up(lg) {
    h1 { font-size: 1rem * 3; }
    h2 { font-size: 1rem * 2.5; }
    h3 { font-size: 1rem * 2.25; }
    h4 { font-size: 1rem * 2; }
    h5 { font-size: 1rem * 1.8; }
    h6 { font-size: 1rem * 1.5; }

    body {
        font-size: 1.2rem;
    }
}

@include media-breakpoint-up(xl) {
    h1 { font-size: 1rem * 3.5; }
    h2 { font-size: 1rem * 3; }
    h3 { font-size: 1rem * 2.75; }
    h4 { font-size: 1rem * 2.25; }
    h5 { font-size: 1rem * 2; }
    h6 { font-size: 1rem * 1.75; }

    body {
        font-size: 1.3rem;
    }
}

@include media-breakpoint-up(fhd) {
    h1 { font-size: 1rem * 4; }
    h2 { font-size: 1rem * 3.25; }
    h3 { font-size: 1rem * 3.0; }
    h4 { font-size: 1rem * 2.25; }
    h5 { font-size: 1rem * 2; }
    h6 { font-size: 1rem * 2; }

    body {
        font-size: 1.45rem;
    }
}


.skills-list {
    border-left: 2px solid $orange;
    list-style: none;
    margin: 20px 0 20px 0;
    padding: 0 0 0 15px;

    .skills__description {
        display: block;
        padding: 8px 5px 7px 15px;
        margin-left: -15px;
        line-height: 1;
        color: black;
        background-color: $orange;
        font-weight: bold;
    }

    li {
        padding: 0;
        margin: 0 0 10px 0;
        font-weight: 300;
        opacity: 0;
        animation-duration: 400ms;
        animation-fill-mode: forwards;

        &:last-of-type {
            margin-bottom: 0;
        }
    }
}


.title-animation {
    color: $orange;
    font-weight: 300;
    display: inline-block;

    span {
        float: left;
        transition: all 500ms ease-in-out;
        display: inline-block;
        opacity: 0;
        max-width: 0;
        color: white;
    }

    strong {
        font-weight: bold;
        display: inline-block;
        float: left;
        margin-left: 0.5em;

        @include media-breakpoint-up(lg) {
            &:first-of-type {
                margin-left: 0;
            }
        }
    }
}

.text-left {
    .title-animation {
        strong {
            &:first-of-type {
                margin-left: 0;
            }
        }
    }
}

.swiper-slide-active {
    .title-animation {
        span {
            max-width: none;
            opacity: 1;
        }
        @for $i from 1 through 20 {
            span:nth-of-type(#{$i}n) {
                transition-delay: #{$i * 40}ms;
            }
        }
    }
}
